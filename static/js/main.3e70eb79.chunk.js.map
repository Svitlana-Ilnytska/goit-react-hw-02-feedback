{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Notification.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","className","css","buttonList","Object","keys","map","button","buttonItem","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","title","Section","children","App","state","e","count","target","textContent","setState","currentState","countTotalFeedback","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oPA0BeA,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACE,oBAAIC,UAAWC,IAAIC,WAAnB,SACGC,OAAOC,KAAKN,GAASO,KAAI,SAACC,GACzB,OACE,oBAAiBN,UAAWC,IAAIM,WAAhC,SACE,wBAAQC,KAAK,SAASC,QAASV,EAA/B,SACGO,KAFIA,WCGJI,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,4BAAIA,O,gBC4BOC,EA3BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,8BACGD,EACC,qCACE,oBAAIhB,UAAWC,IAAIiB,MAAnB,yBACA,oBAAGlB,UAAWC,IAAIiB,MAAlB,oBAAiCL,KACjC,oBAAGb,UAAWC,IAAIiB,MAAlB,uBAAoCJ,KACpC,oBAAGd,UAAWC,IAAIiB,MAAlB,mBAAgCH,KAChC,oBAAGf,UAAWC,IAAIiB,MAAlB,qBAAkCF,KAClC,oBAAGhB,UAAWC,IAAIiB,MAAlB,iCAA8CD,EAA9C,WAGF,qBAAKjB,UAAWC,IAAIiB,MAApB,SACE,cAAC,EAAD,CAAcP,QAAQ,8B,gBCFfQ,EAZC,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAOE,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIpB,UAAWC,IAAIiB,MAAnB,SAA2BA,IAC1BE,MCFgBC,E,4MACnBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPhB,gBAAkB,SAACwB,GACjB,IAAMC,EAAQD,EAAEE,OAAOC,YACvB,EAAKC,UAAS,SAACC,GAAD,sBACXJ,EAAQI,EAAaJ,GAAS,O,EAInCK,mBAAqB,a,4CAQrB,WACE,IAAQhB,EAASiB,KAAKR,MAAdT,KACAC,EAAYgB,KAAKR,MAAjBR,QACAC,EAAQe,KAAKR,MAAbP,IAGFC,EAAQH,EAAOC,EAAUC,EAEzBE,EAA6B,IAAPJ,EAAcG,EAE1C,OACE,8BACE,eAAC,EAAD,CAASE,MAAM,wBAAf,UACE,cAAC,EAAD,CACEpB,QAASgC,KAAKR,MACdvB,gBAAiB+B,KAAK/B,kBAExB,cAAC,EAAD,CACEc,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA5CCc,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,MAAQ,4B,kBCA1BD,EAAOC,QAAU,CAAC,WAAa,oCAAoC,WAAa,sC,kBCAhFD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.3e70eb79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport css from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    <ul className={css.buttonList}>\r\n      {Object.keys(options).map((button) => {\r\n        return (\r\n          <li key={button} className={css.buttonItem}>\r\n            <button type=\"button\" onClick={onLeaveFeedback}>\r\n              {button}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <p>{message}</p>\r\n  </>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notification from \"./Notification\";\r\n\r\nimport css from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    {total ? (\r\n      <>\r\n        <h2 className={css.title}> Statistics</h2>\r\n        <p className={css.title}> Good: {good}</p>\r\n        <p className={css.title}> Neutral: {neutral}</p>\r\n        <p className={css.title}> Bad: {bad}</p>\r\n        <p className={css.title}> Total: {total}</p>\r\n        <p className={css.title}> Positive feedback: {positivePercentage} %</p>\r\n      </>\r\n    ) : (\r\n      <div className={css.title}>\r\n        <Notification message=\"There is no feedback\" />\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport css from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2 className={css.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\n\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (e) => {\n    const count = e.target.textContent;\n    this.setState((currentState) => ({\n      [count]: currentState[count] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {};\n\n  // countPositiveFeedbackPercentage = () => {\n  //   const positivePercentage = (this.state.good * 100) / countTotalFeedback();\n    \n  //   return positivePercentage;\n  // };\n\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n    // const { options } = this.state;\n\n    const total = good + neutral + bad;\n\n    const positivePercentage = (good * 100) / total;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3J58V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__2HA35\",\"buttonItem\":\"FeedbackOptions_buttonItem__1xos3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2TE7r\"};"],"sourceRoot":""}